/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import MainPage.LoginPage;
import User.UserPage;
import config.Session;
import config.dbConnector;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;
import net.proteanit.sql.DbUtils;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
/**
 *
 * @author Mark Kevin Romo
 */
public class UserPendings extends javax.swing.JFrame {

    /**
     * Creates new form UserPendings
     */
    
    public UserPendings() {
        initComponents();
        displayData();
        
    TableColumnModel UserColumnModel = a_table.getColumnModel();
       
        UserColumnModel.getColumn(0).setHeaderValue("ID");
        UserColumnModel.getColumn(1).setHeaderValue("LASTNAME");
        UserColumnModel.getColumn(2).setHeaderValue("USERNAME");
        UserColumnModel.getColumn(3).setHeaderValue("USER TYPE");
        UserColumnModel.getColumn(4).setHeaderValue("STATUS");

    a_table.getTableHeader().repaint();
    
    TableColumnModel BookingColumnModel = p_table.getColumnModel();
        
        BookingColumnModel.getColumn(0).setHeaderValue("ID");
        BookingColumnModel.getColumn(1).setHeaderValue("ROOM ID");
        BookingColumnModel.getColumn(2).setHeaderValue("LASTNAME");
        BookingColumnModel.getColumn(3).setHeaderValue("CHECK-OUT");
        BookingColumnModel.getColumn(4).setHeaderValue("STATUS");

    p_table.getTableHeader().repaint();
    
    }
    
     Color hovercolor = new Color(255,255,255);
     Color exitcolor = new Color(0,0,153);
     Color foregroundcolor = new Color(0,0,0);
     Color exitforegroundcolor = new Color(255,255,255);

    public void displayData(){
        try{
            dbConnector dbc = new dbConnector();
            ResultSet rsInactive = dbc.getData("SELECT b_id, rm_id, g_lname, b_cout, b_status FROM tbl_bookings WHERE b_status = 'Pending'");
        p_table.setModel(DbUtils.resultSetToTableModel(rsInactive));
        rsInactive.close();

        ResultSet rsActive = dbc.getData("SELECT u_id, u_lname, u_usern, u_type, u_status FROM tbl_user WHERE u_status = 'Inactive'");
        a_table.setModel(DbUtils.resultSetToTableModel(rsActive));
        rsActive.close();
        }catch(SQLException ex){
            System.out.println("Errors: "+ex.getMessage());

        }

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        p_table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        a_table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        minimize1 = new javax.swing.JLabel();
        exit1 = new javax.swing.JLabel();
        b_button = new javax.swing.JLabel();
        s_update = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        p_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        p_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(p_table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, 390, 280));

        a_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(a_table);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 390, 280));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("USER");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 390, 30));
        jPanel1.add(filler1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 470, -1, -1));

        jPanel3.setBackground(new java.awt.Color(0, 0, 153));
        jPanel3.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("PENDINGS");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(10, 10, 230, 40);

        minimize1.setBackground(new java.awt.Color(0, 0, 153));
        minimize1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        minimize1.setForeground(new java.awt.Color(255, 255, 255));
        minimize1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimize1.setText("â€”");
        minimize1.setOpaque(true);
        minimize1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimize1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimize1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimize1MouseExited(evt);
            }
        });
        jPanel3.add(minimize1);
        minimize1.setBounds(810, 10, 40, 30);

        exit1.setBackground(new java.awt.Color(0, 0, 153));
        exit1.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        exit1.setForeground(new java.awt.Color(255, 255, 255));
        exit1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exit1.setText("X");
        exit1.setOpaque(true);
        exit1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exit1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exit1MouseExited(evt);
            }
        });
        jPanel3.add(exit1);
        exit1.setBounds(850, 10, 40, 30);

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 60));

        b_button.setBackground(new java.awt.Color(0, 0, 153));
        b_button.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b_button.setForeground(new java.awt.Color(255, 255, 255));
        b_button.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b_button.setText("Back");
        b_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        b_button.setOpaque(true);
        b_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_buttonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_buttonMouseExited(evt);
            }
        });
        jPanel1.add(b_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 150, 40));

        s_update.setBackground(new java.awt.Color(0, 0, 153));
        s_update.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        s_update.setForeground(new java.awt.Color(255, 255, 255));
        s_update.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        s_update.setText("Update");
        s_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        s_update.setOpaque(true);
        s_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s_updateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                s_updateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                s_updateMouseExited(evt);
            }
        });
        jPanel1.add(s_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 420, 150, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("BOOKINGS");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, 390, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
         Session sess = Session.getInstance();
         
      if(sess.getUid() == 0){
      JOptionPane.showMessageDialog(null, "No Shortcut Allowed!, Login First!");
        LoginPage mpg = new LoginPage();
        mpg.setVisible(true);
        this.dispose();
      }else{
       
      }
    }//GEN-LAST:event_formWindowActivated

    private void minimize1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimize1MouseClicked
        setState(ICONIFIED);
    }//GEN-LAST:event_minimize1MouseClicked

    private void minimize1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimize1MouseEntered
        minimize1.setBackground(new java.awt.Color(240,240,240));
        minimize1.setForeground(new java.awt.Color(0,0,0));
    }//GEN-LAST:event_minimize1MouseEntered

    private void minimize1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimize1MouseExited
        minimize1.setBackground(new java.awt.Color(0,0,153));
        minimize1.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_minimize1MouseExited

    private void exit1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit1MouseClicked
        
    dbConnector dbc = new dbConnector();
    Session sess = Session.getInstance();
    
    String action = "Logged Out from the System";
    dbc.insertData("INSERT INTO tbl_logs (usr_id, l_actions, l_date) VALUES ('"+sess.getUid()+"', '"+action+"', '"+LocalDateTime.now()+"' ) ");
        
        System.exit(0);
    }//GEN-LAST:event_exit1MouseClicked

    private void exit1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit1MouseEntered
        exit1.setBackground(new java.awt.Color(240,240,240));
        exit1.setForeground(new java.awt.Color(0,0,0));
    }//GEN-LAST:event_exit1MouseEntered

    private void exit1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit1MouseExited
        exit1.setBackground(new java.awt.Color(0,0,153));
        exit1.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_exit1MouseExited

    private void b_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_buttonMouseClicked
    Session sess = Session.getInstance();
    String type = sess.getType();

    if (type.equals("Admin")) {
        AdminPage hmp = new AdminPage();
        hmp.setVisible(true);
    } else if (type.equals("User")) {
        UserPage usp = new UserPage();
        usp.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "Unknown account type: " + type);
        return;
    }

    this.dispose();
    }//GEN-LAST:event_b_buttonMouseClicked

    private void b_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_buttonMouseEntered
        b_button.setBackground(hovercolor);
        b_button.setForeground(foregroundcolor);
    }//GEN-LAST:event_b_buttonMouseEntered

    private void b_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_buttonMouseExited
        b_button.setBackground(exitcolor);
        b_button.setForeground(exitforegroundcolor);
    }//GEN-LAST:event_b_buttonMouseExited

    private void s_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s_updateMouseClicked
        try {
        dbConnector dbc = new dbConnector();
        int selectedInactive = p_table.getSelectedRow();
        int selectedActive = a_table.getSelectedRow();

        if (selectedInactive != -1) {
            String id = p_table.getValueAt(selectedInactive, 0).toString();

            String fetchDatesSql = "SELECT b_cin, b_cout FROM tbl_bookings WHERE b_id = '" + id + "'";
            ResultSet rs = dbc.getData(fetchDatesSql);

            if (rs.next()) {
                LocalDate b_cin = rs.getDate("b_cin").toLocalDate();
                LocalDate b_cout = rs.getDate("b_cout").toLocalDate();

                long daysBetween = ChronoUnit.DAYS.between(b_cin, b_cout);
                String timeInValue = daysBetween + " Day";

                String updateSql = "UPDATE tbl_bookings SET b_status = 'Approved', time_in = '" + timeInValue + "' WHERE b_id = '" + id + "'";
                dbc.updateData(updateSql);

                JOptionPane.showMessageDialog(this, "Booking Approved successfully!");

                AdminPage adp = new AdminPage();
                adp.setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Booking not found.");
            }

        } else if (selectedActive != -1) {
            String id = a_table.getValueAt(selectedActive, 0).toString();
            String sql = "UPDATE tbl_user SET u_status = 'Active' WHERE u_id = '" + id + "'";
            dbc.updateData(sql);
            JOptionPane.showMessageDialog(this, "User Activated successfully!");

            Session sess = Session.getInstance();
            String type = sess.getType();

            if (type.equals("Admin")) {
                AdminPage hmp = new AdminPage();
                hmp.setVisible(true);
            } else if (type.equals("User")) {
                UserPage usp = new UserPage();
                usp.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Unknown account type: " + type);
                return;
            }

            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Please select a user or booking to update.");
        }

        displayData();

    } catch (Exception ex) {
        System.out.println("Error: " + ex.getMessage());
    }
    }//GEN-LAST:event_s_updateMouseClicked

    private void s_updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s_updateMouseEntered
        s_update.setBackground(hovercolor);
        s_update.setForeground(foregroundcolor);
    }//GEN-LAST:event_s_updateMouseEntered

    private void s_updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s_updateMouseExited
        s_update.setBackground(exitcolor);
        s_update.setForeground(exitforegroundcolor);
    }//GEN-LAST:event_s_updateMouseExited

    private void p_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_tableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_p_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserPendings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserPendings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserPendings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserPendings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserPendings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable a_table;
    private javax.swing.JLabel b_button;
    private javax.swing.JLabel exit1;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel minimize1;
    private javax.swing.JTable p_table;
    private javax.swing.JLabel s_update;
    // End of variables declaration//GEN-END:variables
}
