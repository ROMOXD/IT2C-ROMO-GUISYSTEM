/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Account;

import Admin.AdminPage;
import User.UserPage;
import config.Session;
import config.dbConnector;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

/**
 *
 * @author Mark Kevin Romo
 */
public class RecoverAcc extends javax.swing.JInternalFrame {

    /**
     * Creates new form RecoverAcc
     */
    public RecoverAcc() {
        initComponents();
        this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
    @Override
    public void internalFrameActivated(javax.swing.event.InternalFrameEvent e) {
        checkRecoveryAnswers();
    }
    });
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
    ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
    
    Border line = BorderFactory.createLineBorder(Color.BLACK);
    Border margin = BorderFactory.createEmptyBorder(5, 10, 5, 10); 
    Border compound = BorderFactory.createCompoundBorder(line, margin);

    f_ques.setBorder(compound);
    s_ques.setBorder(compound);
    t_ques.setBorder(compound);
    }
    
     Color hovercolor = new Color(255,255,255);
     Color exitcolor = new Color(0,0,153);
     Color foregroundcolor = new Color(0,0,0);
     Color exitforegroundcolor = new Color(255,255,255);
     
  public static String utype;

    public boolean duplicatecheck() {
        dbConnector dbc = new dbConnector();
        Session sess = Session.getInstance();
        int uid = sess.getUid();
        int userid;

        try {
            String query = "SELECT * FROM tbl_recovery WHERE user_id = '" + uid + "'";
            ResultSet resultSet = dbc.getData(query);

            if (resultSet.next()) {
                utype = resultSet.getString("u_type");
                userid = resultSet.getInt("user_id");
                String a1 = resultSet.getString("f_ans");
                String a2 = resultSet.getString("s_ans");
                String a3 = resultSet.getString("t_ans");

                f_ques.setText(a1);
                s_ques.setText(a2);
                t_ques.setText(a3);

                f_ques.setEnabled(false);
                s_ques.setEnabled(false);
                t_ques.setEnabled(false);

                r_save.setEnabled(false);

                return true;
            } else {
                f_ques.setEnabled(true);
                s_ques.setEnabled(true);
                t_ques.setEnabled(true);
                r_save.setEnabled(true);

                return false;
            }
        } catch (SQLException ex) {
            System.out.println("" + ex);
            return false;
        }
    }

   public void checkRecoveryAnswers() {
        dbConnector dbc = new dbConnector();
        Session sess = Session.getInstance();
        int uid = sess.getUid();

        try {
            String query = "SELECT * FROM tbl_recovery WHERE user_id = '" + uid + "'";
            ResultSet resultSet = dbc.getData(query);

            if (resultSet.next()) {
                f_ques.setText(resultSet.getString("f_ans"));
                s_ques.setText(resultSet.getString("s_ans"));
                t_ques.setText(resultSet.getString("t_ans"));

                f_ques.setEditable(false);
                s_ques.setEditable(false);
                t_ques.setEditable(false);
                r_save.setEnabled(false);
                caution.setText("Answers Added Successfully.");
            } else {
                f_ques.setEditable(true);
                s_ques.setEditable(true);
                t_ques.setEditable(true);
                r_save.setEnabled(true);
                caution.setText("");
            }
        } catch (SQLException ex) {
            System.out.println("Error while checking recovery answers: " + ex.getMessage());
            JOptionPane.showMessageDialog(null, "Error checking recovery answers.");
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        f_ques = new javax.swing.JTextField();
        s_ques = new javax.swing.JTextField();
        t_ques = new javax.swing.JTextField();
        caution = new javax.swing.JLabel();
        r_save = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("What was your childhood nickname?");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 290, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("What is your favorite anime?");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("What is the title of your favorite song?");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("SECURITY QUESTIONS: ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        f_ques.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f_quesActionPerformed(evt);
            }
        });
        jPanel1.add(f_ques, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 130, 220, 30));
        jPanel1.add(s_ques, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 180, 220, 30));
        jPanel1.add(t_ques, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 230, 220, 30));

        caution.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(caution, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 240, 40));

        r_save.setBackground(new java.awt.Color(0, 0, 153));
        r_save.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        r_save.setForeground(new java.awt.Color(255, 255, 255));
        r_save.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        r_save.setText("Save");
        r_save.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        r_save.setOpaque(true);
        r_save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                r_saveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                r_saveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                r_saveMouseExited(evt);
            }
        });
        jPanel1.add(r_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 300, 160, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void f_quesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f_quesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_f_quesActionPerformed

    private void r_saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_r_saveMouseClicked
        if (!r_save.isEnabled()) {
        return;
    }

    dbConnector dbc = new dbConnector();
    Session sess = Session.getInstance();

    if (duplicatecheck()) {

        f_ques.setText("");
        s_ques.setText("");
        t_ques.setText("");
        caution.setText("User already set up recovery questions.");
        r_save.setEnabled(false);
        f_ques.setEditable(false);
        s_ques.setEditable(false);
        t_ques.setEditable(false);
    } else {
        if (f_ques.getText().isEmpty() || s_ques.getText().isEmpty() || t_ques.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "All questions should be answered!");
        } else {
            int uid = sess.getUid();
            String ans1 = f_ques.getText();
            String ans2 = s_ques.getText();
            String ans3 = t_ques.getText();

            String query = "INSERT INTO tbl_recovery (user_id, f_ans, s_ans, t_ans) " +
                           "VALUES ('" + uid + "', '" + ans1 + "', '" + ans2 + "', '" + ans3 + "')";

            boolean success = dbc.insertData(query);

            if (success) {
                caution.setText("Recovery questions saved successfully!");
                
                checkRecoveryAnswers();
                r_save.setEnabled(false);
                f_ques.setEditable(false);
                s_ques.setEditable(false);
                t_ques.setEditable(false);
                f_ques.setEnabled(false);
                s_ques.setEnabled(false);
                t_ques.setEnabled(false);
                
    
    String type = sess.getType();
    if (type.equals("Admin")) {
        AdminPage hmp = new AdminPage();
        hmp.setVisible(true);
    } else if (type.equals("User")) {
        UserPage usp = new UserPage();
        usp.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "Unknown account type: " + type);
        return;
    }

    this.dispose();
 
            } else {
                JOptionPane.showMessageDialog(null, "Database error: Failed to save recovery answers.");
            }
        }
    }
    }//GEN-LAST:event_r_saveMouseClicked

    private void r_saveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_r_saveMouseEntered
        r_save.setBackground(hovercolor);
        r_save.setForeground(foregroundcolor);
    }//GEN-LAST:event_r_saveMouseEntered

    private void r_saveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_r_saveMouseExited
        r_save.setBackground(exitcolor);
        r_save.setForeground(exitforegroundcolor);
    }//GEN-LAST:event_r_saveMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel caution;
    private javax.swing.JTextField f_ques;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel r_save;
    private javax.swing.JTextField s_ques;
    private javax.swing.JTextField t_ques;
    // End of variables declaration//GEN-END:variables
}
